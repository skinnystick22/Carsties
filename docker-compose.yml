services:
  postgres:
    command:
      - "postgres"
    container_name: "postgres"
    entrypoint:
      - "docker-entrypoint.sh"
    environment:
      - "PGDATA=/var/lib/postgresql/data"
      - "POSTGRES_PASSWORD=St@rCraft#22F0x"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/17/bin"
      - "PG_MAJOR=17"
    hostname: "postgres"
    image: "postgres:17.4-alpine3.21"
    logging:
      driver: "json-file"
      options: { }
    networks:
      - carsties
    ports:
      - "5432:5432/tcp"
    volumes:
      - "postgres_data:/var/lib/postgresql/data"

  rabbitmq_with_management:
    command:
      - "rabbitmq-server"
    container_name: "rabbitmq_with_management"
    entrypoint:
      - "docker-entrypoint.sh"
    environment:
      - "RABBITMQ_DATA_DIR=/var/lib/rabbitmq"
      - "RABBITMQ_PGP_KEY_ID=0x0A9AF2115F4687BD29803A206B73A36E6026DFCA"
      - "RABBITMQ_HOME=/opt/rabbitmq"
      - "HOME=/var/lib/rabbitmq"
    hostname: "rabbitmq"
    image: "rabbitmq:4.0.8-management-alpine"
    logging:
      driver: "json-file"
      options: { }
    networks:
      - carsties
    ports:
      - "15671:15672/tcp"
      - "5672:5672/tcp"
    volumes:
      - "rabbitmq_data:/var/lib/rabbitmq"
    working_dir: "/"

  ravendb:
    command:
      - "/bin/bash"
      - "/usr/lib/ravendb/scripts/run-raven.sh"
    cap_add:
      - NET_BIND_SERVICE
    container_name: "ravendb"
    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "APP_UID=1654"
      - "ASPNETCORE_HTTP_PORTS=8080"
      - "DOTNET_RUNNING_IN_CONTAINER=true"
      - "RAVEN_ARGS="
      - "RAVEN_SETTINGS="
      - "RAVEN_IN_DOCKER=true"
      - "RAVEN_Setup_Mode=Initial"
      - "RAVEN_ServerUrl_Tcp=38888"
      - "RAVEN_AUTO_INSTALL_CA=true"
      - "RAVEN_DataDir=/var/lib/ravendb/data"
      - "RAVEN_Indexing_NugetPackagesPath=/var/lib/ravendb/nuget"
      - "RAVEN_Logs_Path=/var/log/ravendb/logs"
      - "RAVEN_Security_AuditLog_FolderPath=/var/log/ravendb/audit"
      - "RAVEN_Security_MasterKey_Path=/etc/ravendb/security/master.key"
      - "RAVEN_Setup_Certificate_Path=/etc/ravendb/security/server.pfx"
      - "RAVEN_Security_UnsecuredAccessAllowed=PrivateNetwork"
    hostname: "ravendb"
    image: "ravendb/ravendb:latest"
    labels:
      org.opencontainers.image.ref.name: "ubuntu"
      org.opencontainers.image.version: "22.04"
    networks:
      - carsties
    logging:
      driver: "json-file"
      options: { }
    ports:
      - "161:161/tcp"
      - "38888:38888/tcp"
      - "8081:8080/tcp"
    user: "ravendb:ravendb"
    volumes:
      - "ravendb_etc:/etc/ravendb"
      - "ravendb_data:/var/lib/ravendb/data"
    working_dir: "/usr/lib/ravendb"

  auctions_service_api:
    build:
      context: "./src/AuctionService/AuctionService.API"
      dockerfile: Dockerfile
    container_name: "auctions_service_api"
    hostname: "auction_service_api"
    environment:
      - "ASPNETCORE_HTTP_PORTS=80"
      - "ASPNETCORE_ENVIRONMENT=Production"
    depends_on:
      - postgres
      - rabbitmq_with_management
      - identity_service
    image: "auctionserviceapi:latest"
    ports:
      - "7016:80"
    networks:
      - carsties

  search_service_api:
    build:
      context: "./src/SearchService/SearchService.API"
      dockerfile: Dockerfile
    container_name: "search_service_api"
    hostname: "search_service_api"
    environment:
      - "ASPNETCORE_HTTP_PORTS=80"
      - "ASPNETCORE_ENVIRONMENT=Production"
    depends_on:
      - ravendb
      - rabbitmq_with_management
    image: "searchserviceapi:latest"
    ports:
      - "7017:80"
    networks:
      - carsties

  identity_service:
    build:
      context: "./src/IdentityService"
      dockerfile: Dockerfile
    container_name: "identity_service"
    hostname: "identity_service"
    environment:
      - "ASPNETCORE_HTTP_PORTS=80"
      - "ASPNETCORE_ENVIRONMENT=Production"
    depends_on:
      - postgres
    image: "identityservice:latest"
    ports:
      - "7018:80"
    networks:
      - carsties

  gateway_service:
    build:
      context: "./src/GatewayService"
      dockerfile: Dockerfile
    container_name: "gateway_service"
    hostname: "gateway_service"
    environment:
      - "ASPNETCORE_HTTP_PORTS=80"
      - "ASPNETCORE_ENVIRONMENT=Production"
    image: "gatewayservice:latest"
    ports:
      - "5050:80"
    networks:
      - carsties

networks:
  carsties:
    driver: bridge

volumes:
  ravendb_etc:
  rabbitmq_data:
  postgres_data:
  ravendb_data: